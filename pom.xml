<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.jboss.perf</groupId>
    <artifactId>web-benchmark</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <properties>
        <!-- Explicitly declaring the source encoding eliminates the following message: -->
        <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered
            resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- JBoss dependency versions -->
        <version.io.gatling>3.11.5</version.io.gatling>
        <version.jakarta.ee>10.0.0</version.jakarta.ee>
        <version.wildfly.maven.plugin>5.0.0.Final</version.wildfly.maven.plugin>

        <!-- other plug-in versions -->
        <version.gatling-maven-plugin>4.9.6</version.gatling-maven-plugin>
        <version.maven-ant-plugin>3.1.0</version.maven-ant-plugin>
        <version.scala-maven-plugin>4.9.2</version.scala-maven-plugin>
        <version.war.plugin>3.4.0</version.war.plugin>

        <!-- Compile with Java 17 -->
        <maven.compiler.release>17</maven.compiler.release>

        <!-- Test configurations -->
        <gatling.runMultipleSimulations>true</gatling.runMultipleSimulations>

        <!-- Provisioning properties -->
        <jboss.home>${project.build.directory}${file.separator}wildfly</jboss.home>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>jakarta.platform</groupId>
                <artifactId>jakarta.jakartaee-bom</artifactId>
                <version>${version.jakarta.ee}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.inject</groupId>
            <artifactId>jakarta.inject-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.json</groupId>
            <artifactId>jakarta.json-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.json.bind</groupId>
            <artifactId>jakarta.json.bind-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>io.gatling.highcharts</groupId>
            <artifactId>gatling-charts-highcharts</artifactId>
            <version>${version.io.gatling}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.parsson</groupId>
            <artifactId>parsson</artifactId>
            <version>1.1.6</version>
            <scope>test</scope>
        </dependency>
        <!-- Currently Jakarta JSON Processing doesn't seem to work as it's not as forgiving, so we need to keep this
             for now. -->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20240303</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.war.plugin}</version>
                <configuration>
                    <!-- Java EE doesn't require web.xml, Maven needs to catch up! -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>${version.wildfly.maven.plugin}</version>
                <configuration>
                    <jboss-home>${jboss.home}</jboss-home>
                    <provisioning-dir>${jboss.home}</provisioning-dir>
                    <feature-packs>
                        <feature-pack>
                            <groupId>org.wildfly</groupId>
                            <artifactId>wildfly-ee-galleon-pack</artifactId>
                        </feature-pack>
                    </feature-packs>
                    <channels>
                        <channel>
                            <manifest>
                                <groupId>org.wildfly.channels</groupId>
                                <artifactId>wildfly-ee</artifactId>
                            </manifest>
                        </channel>
                    </channels>
                    <layers>
                        <layer>ee-core-profile-server</layer>
                    </layers>
                    <galleon-options>
                        <jboss-fork-embedded>true</jboss-fork-embedded>
                    </galleon-options>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>single</id>
            <activation>
                <property>
                    <name>gatling.simulationClass</name>
                </property>
            </activation>
            <properties>
                <gatling.runMultipleSimulations>false</gatling.runMultipleSimulations>
            </properties>
        </profile>
        <profile>
            <id>server</id>
            <activation>
                <property>
                    <name>!test.host</name>
                </property>
            </activation>
            <build>
                <finalName>${project.artifactId}</finalName>
                <plugins>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <executions>
                            <!-- Provision a WildFly Server -->
                            <execution>
                                <id>provision</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>provision</goal>
                                </goals>
                            </execution>
                            <!-- Start the WildFly server -->
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <!-- Deploy our test application -->
                            <execution>
                                <id>deploy</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                            </execution>
                            <!-- After integration tests are done, undeploy the application and stop the server -->
                            <execution>
                                <id>undeploy</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>undeploy</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>shutdown</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>shutdown</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>client</id>
            <activation>
                <property>
                    <name>!server</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>net.alchim31.maven</groupId>
                        <artifactId>scala-maven-plugin</artifactId>
                        <version>${version.scala-maven-plugin}</version>
                        <configuration>
                            <addScalacArgs>-deprecation</addScalacArgs>
                        </configuration>
                        <executions>
                            <execution>
                                <id>test-scala-compile</id>
                                <goals>
                                    <goal>testCompile</goal>
                                </goals>
                                <phase>test-compile</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.gatling</groupId>
                        <artifactId>gatling-maven-plugin</artifactId>
                        <version>${version.gatling-maven-plugin}</version>
                        <configuration>
                            <runMultipleSimulations>${gatling.runMultipleSimulations}</runMultipleSimulations>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>${version.maven-ant-plugin}</version>
                        <executions>
                            <execution>
                                <id>clean-pld-results</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <delete dir="${project.build.directory}/gatling" />
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>summarize-results</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <java classname="org.jboss.perf.PrintStats" classpathref="maven.test.classpath" fork="yes">
                                            <sysproperty key="java.security.manager" value="allow"/>
                                            <arg value="${project.build.directory}/gatling/"/>
                                        </java>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
